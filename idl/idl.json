[
  {
    "params": [],
    "annotation": {
      "global": true
    },
    "desc": "注册控件。",
    "name": "html_view_register",
    "return": {
      "type": "ret_t",
      "desc": "返回RET_OK表示成功，否则表示失败。"
    },
    "type": "method",
    "header": "src/html_view_register.h",
    "level": 1
  },
  {
    "params": [],
    "annotation": {
      "global": true
    },
    "desc": "获取支持的渲染模式。",
    "name": "html_view_supported_render_mode",
    "return": {
      "type": "const char*",
      "desc": "返回渲染模式。"
    },
    "type": "method",
    "header": "src/html_view_register.h",
    "level": 1
  },
  {
    "type": "class",
    "methods": [
      {
        "params": [
          {
            "type": "widget_t*",
            "name": "parent",
            "desc": "父控件"
          },
          {
            "type": "xy_t",
            "name": "x",
            "desc": "x坐标"
          },
          {
            "type": "xy_t",
            "name": "y",
            "desc": "y坐标"
          },
          {
            "type": "wh_t",
            "name": "w",
            "desc": "宽度"
          },
          {
            "type": "wh_t",
            "name": "h",
            "desc": "高度"
          }
        ],
        "annotation": {
          "constructor": true,
          "scriptable": true
        },
        "desc": "创建html_view对象",
        "name": "html_view_create",
        "return": {
          "type": "widget_t*",
          "desc": "对象。"
        }
      },
      {
        "params": [
          {
            "type": "widget_t*",
            "name": "widget",
            "desc": "html_view对象。"
          }
        ],
        "annotation": {
          "cast": true,
          "scriptable": true
        },
        "desc": "转换为html_view对象(供脚本语言使用)。",
        "name": "html_view_cast",
        "return": {
          "type": "widget_t*",
          "desc": "html_view对象。"
        }
      }
    ],
    "events": [],
    "properties": [],
    "header": "html_view/html_view.h",
    "desc": "html_view是一个专用容器，用来放 html 和 scroll bar，并在两者之间建立联系。\n\nhtml_view\\_t是[widget\\_t](widget_t.md)的子类控件，widget\\_t的函数均适用于html_view\\_t控件。\n\n在xml中使用\"html_view\"标签创建html_view。如：\n\n```xml\n<html_view x=\"0\" y=\"10\" w=\"100%\" h=\"300\">\n<html x=\"0\" y=\"10\" w=\"-12\" h=\"100%\">\n...\n</html>\n<scroll_bar_d name=\"bar\" x=\"right\" y=\"0\" w=\"12\" h=\"100%\" value=\"0\"/>\n</html_view>\n```\n\n可用通过style来设置控件的显示风格，如背景颜色等。如：\n\n```xml\n<style name=\"default\" border_color=\"#a0a0a0\">\n<normal     bg_color=\"#f0f0f0\" />\n</style>\n```",
    "name": "html_view_t",
    "parent": "widget_t",
    "annotation": {
      "scriptable": true,
      "design": true,
      "widget": true
    },
    "level": 2
  },
  {
    "type": "class",
    "methods": [
      {
        "params": [
          {
            "type": "widget_t*",
            "name": "parent",
            "desc": "父控件"
          },
          {
            "type": "xy_t",
            "name": "x",
            "desc": "x坐标"
          },
          {
            "type": "xy_t",
            "name": "y",
            "desc": "y坐标"
          },
          {
            "type": "wh_t",
            "name": "w",
            "desc": "宽度"
          },
          {
            "type": "wh_t",
            "name": "h",
            "desc": "高度"
          }
        ],
        "annotation": {
          "constructor": true,
          "scriptable": true
        },
        "desc": "创建html对象",
        "name": "html_create",
        "return": {
          "type": "widget_t*",
          "desc": "html对象。"
        }
      },
      {
        "params": [
          {
            "type": "widget_t*",
            "name": "widget",
            "desc": "html对象。"
          }
        ],
        "annotation": {
          "cast": true,
          "scriptable": true
        },
        "desc": "转换为html对象(供脚本语言使用)。",
        "name": "html_cast",
        "return": {
          "type": "widget_t*",
          "desc": "html对象。"
        }
      },
      {
        "params": [
          {
            "type": "widget_t*",
            "name": "widget",
            "desc": "widget对象。"
          },
          {
            "type": "const char*",
            "name": "url",
            "desc": "网址。。"
          }
        ],
        "annotation": {
          "scriptable": true
        },
        "desc": "设置 网址。。",
        "name": "html_set_url",
        "return": {
          "type": "ret_t",
          "desc": "返回RET_OK表示成功，否则表示失败。"
        }
      },
      {
        "params": [
          {
            "type": "widget_t*",
            "name": "widget",
            "desc": "控件对象。"
          },
          {
            "type": "bool_t",
            "name": "yslidable",
            "desc": "是否允许滑动。"
          }
        ],
        "annotation": {
          "scriptable": true
        },
        "desc": "设置是否允许y方向滑动。",
        "name": "html_set_yslidable",
        "return": {
          "type": "ret_t",
          "desc": "返回RET_OK表示成功，否则表示失败。"
        }
      }
    ],
    "events": [],
    "properties": [
      {
        "name": "yoffset",
        "desc": "y偏移。",
        "type": "int32_t",
        "annotation": {
          "set_prop": true,
          "get_prop": true,
          "readable": true
        }
      },
      {
        "name": "yslidable",
        "desc": "标识控件是否允许上下拖动。",
        "type": "bool_t",
        "annotation": {
          "set_prop": true,
          "get_prop": true,
          "readable": true,
          "persitent": true,
          "design": true,
          "scriptable": true
        }
      },
      {
        "name": "url",
        "desc": "网址。。",
        "type": "char*",
        "annotation": {
          "set_prop": true,
          "get_prop": true,
          "readable": true,
          "persitent": true,
          "design": true,
          "scriptable": true
        }
      }
    ],
    "header": "html_view/html.h",
    "desc": "Simple HTML View\n在xml中使用\"html\\_view\"标签创建控件。如：\n\n```xml\n<!-- ui -->\n<html x=\"c\" y=\"50\" w=\"100\" h=\"100\"/>\n```\n\n可用通过style来设置控件的显示风格，如字体的大小和颜色等等。如：\n\n```xml\n<!-- style -->\n<html>\n<style name=\"default\" font_size=\"32\">\n<normal text_color=\"black\" />\n</style>\n</html>\n```",
    "name": "html_t",
    "parent": "widget_t",
    "annotation": {
      "scriptable": true,
      "design": true,
      "widget": true
    },
    "level": 2
  }
]